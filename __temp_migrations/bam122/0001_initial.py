# Generated by Django 2.2.12 on 2022-03-08 07:13

from django.db import migrations, models
import django.db.models.deletion
import jsonfield.fields
import otree.db.idmap
import otree.db.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('otree', '0001_initial'),
    ]

    operations = [
        migrations.CreateModel(
            name='Group',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_subsession', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bam122_group', to='otree.Session')),
            ],
            options={
                'db_table': 'bam122_group',
            },
            bases=(models.Model, otree.db.idmap.GroupIDMapMixin),
        ),
        migrations.CreateModel(
            name='Subsession',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('session', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, related_name='bam122_subsession', to='otree.Session')),
            ],
            options={
                'db_table': 'bam122_subsession',
            },
            bases=(models.Model, otree.db.idmap.SubsessionIDMapMixin),
        ),
        migrations.CreateModel(
            name='Player',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('id_in_group', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_payoff', otree.db.models.CurrencyField(default=0, null=True)),
                ('round_number', otree.db.models.PositiveIntegerField(db_index=True, null=True)),
                ('_role', otree.db.models.StringField(max_length=10000, null=True)),
                ('GoodLooking', otree.db.models.StringField(blank=0, choices=[('Very Ugly-looking', 'Very Ugly-looking'), ('Ugly-looking', 'Ugly-looking'), ('Slightly Ugly-looking', 'Slightly Ugly-looking'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Good-looking', 'Slightly Good-looking'), ('Good-looking', 'Good-looking'), ('Very Good-looking', 'Very Good-looking')], max_length=10000, null=True, verbose_name='Ugly looking or Good looking?')),
                ('Overweight', otree.db.models.StringField(blank=0, choices=[('Very Underweight', 'Very Underweight'), ('Underweight', 'Underweight'), ('Slightly Underweight', 'Slightly Underweight'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Overweight', 'Slightly Overweight'), ('Overweight', 'Overweight'), ('Very Overweight', 'Very Overweight')], max_length=10000, null=True, verbose_name='Underweight or Overweight?')),
                ('Fair', otree.db.models.StringField(blank=0, choices=[('Very Dark', 'Very Dark'), ('Dark', 'Dark'), ('Slightly Dark', 'Slightly Dark'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Fair', 'Slightly Fair'), ('Fair', 'Fair'), ('Very Fair', 'Very Fair')], max_length=10000, null=True, verbose_name='Dark or Fair?')),
                ('Masculine', otree.db.models.StringField(blank=0, choices=[('Very Feminine', 'Very Feminine'), ('Feminine', 'Feminine'), ('Slightly Feminine', 'Slightly Feminine'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Masculine', 'Slightly Masculine'), ('Masculine', 'Masculine'), ('Very Masculine', 'Very Masculine')], max_length=10000, null=True, verbose_name='Feminine or Masculine?')),
                ('Friendly', otree.db.models.StringField(blank=0, choices=[('Very Aggressive', 'Very Aggressive'), ('Aggressive', 'Aggressive'), ('Slightly Aggressive', 'Slightly Aggressive'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Friendly', 'Slightly Friendly'), ('Friendly', 'Friendly'), ('Very Friendly', 'Very Friendly')], max_length=10000, null=True, verbose_name='Aggressive or Friendly?')),
                ('Repentant', otree.db.models.StringField(blank=0, choices=[('Very Repentant', 'Very Repentant'), ('Repentant', 'Repentant'), ('Slightly Repentant', 'Slightly Repentant'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Unrepentant', 'Slightly Unrepentant'), ('Unrepentant', 'Unrepentant'), ('Very Unrepentant', 'Very Unrepentant')], max_length=10000, null=True, verbose_name='Repentant or Unrepentant?')),
                ('AC_Q0', otree.db.models.StringField(blank=0, choices=[('Very Unscientific', 'Very Unscientific'), ('Unscientific', 'Unscientific'), ('Slightly Unscientific', 'Slightly Unscientific'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Scientific', 'Slightly Scientific'), ('Scientific', 'Scientific'), ('Very Scientific', 'Very Scientific')], max_length=10000, null=True, verbose_name='Average/Neutral')),
                ('AC_Q1', otree.db.models.StringField(blank=0, choices=[('Very Exogenous', 'Very Exogenous'), ('Exogenous', 'Exogenous'), ('Slightly Exogenous', 'Slightly Exogenous'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Endogenous', 'Slightly Endogenous'), ('Endogenous', 'Endogenous'), ('Very Endogenous', 'Very Endogenous')], max_length=10000, null=True, verbose_name='Very Exogenous')),
                ('AC_Q2', otree.db.models.StringField(blank=0, choices=[('Very Unversatile', 'Very Unversatile'), ('Unversatile', 'Unversatile'), ('Slightly Unversatile', 'Slightly Unversatile'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Versatile', 'Slightly Versatile'), ('Versatile', 'Versatile'), ('Very Versatile', 'Very Versatile')], max_length=10000, null=True, verbose_name='Very Versatile')),
                ('AC_Q3', otree.db.models.StringField(blank=0, choices=[('Very Repentant', 'Very Repentant'), ('Repentant', 'Repentant'), ('Slightly Repentant', 'Slightly Repentant'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Unrepentant', 'Slightly Unrepentant'), ('Unrepentant', 'Unrepentant'), ('Very Unrepentant', 'Very Unrepentant')], max_length=10000, null=True, verbose_name='Average/Neutral')),
                ('AC_Q4', otree.db.models.StringField(blank=0, choices=[('Very Exogenous', 'Very Exogenous'), ('Exogenous', 'Exogenous'), ('Slightly Exogenous', 'Slightly Exogenous'), ('Average/Neutral', 'Average/Neutral'), ('Slightly Endogenous', 'Slightly Endogenous'), ('Endogenous', 'Endogenous'), ('Very Endogenous', 'Very Endogenous')], max_length=10000, null=True, verbose_name='Very Exogenous')),
                ('AC_QN_Selected', jsonfield.fields.JSONField(default=[])),
                ('AC_QN_Correctness', otree.db.models.FloatField(default=0, null=True)),
                ('AC_Round_Num', otree.db.models.IntegerField(default=-1, null=True)),
                ('AC_Correct_Status', otree.db.models.BooleanField(choices=[(True, 'Yes'), (False, 'No')], default=False, null=True)),
                ('AC_Correctness', otree.db.models.FloatField(default=0, null=True)),
                ('start_time_per_question', otree.db.models.FloatField(blank=True, null=True)),
                ('time_spent_per_question', otree.db.models.FloatField(blank=True, null=True)),
                ('Url', otree.db.models.LongStringField(default=0, null=True)),
                ('group', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to='bam122.Group')),
                ('participant', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bam122_player', to='otree.Participant')),
                ('session', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='bam122_player', to='otree.Session')),
                ('subsession', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bam122.Subsession')),
            ],
            options={
                'db_table': 'bam122_player',
            },
            bases=(models.Model, otree.db.idmap.PlayerIDMapMixin),
        ),
        migrations.AddField(
            model_name='group',
            name='subsession',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bam122.Subsession'),
        ),
    ]
